---
// const res = await fetch(
//   'https://script.google.com/macros/s/AKfycbzJaWR9GG_sLn1dkbgum3AeM1LmLS1Nktkrn8K0pFrlkip0mPn9JRdQQcvrbF-IL-Do/exec',
// )
// const { data } = await res.json()
// console.log(data)
const data = [
  {
    uid: '803b5f28-33ca-43a1-acc9-37a8ca2c565f',
    job: 'Profissional de Product Owner Júnior ',
    role: 'Freelance',
    location: 'Remoto',
    apply_link: 'https://lnkd.in/e6Hpt9Sj',
    category: 'Product Owner',
    company: 'Radix',
    company_link: 'www.radix.com.br',
    company_img: 'https://vagaspm.netlify.app/refresh.png',
    company_category: 'IT Services and IT Consulting',
    company_tag: '',
    job_description: 'descript',
  },
  {
    uid: '2a229012-c253-4cbd-84c8-889678817dc3',
    job: 'Analista de Desenvolvimento de Produtos Sênior',
    role: 'Tempo Integral',
    location: 'Posto',
    apply_link: 'https://www.linkedin.com/jobs/view/3916621604/',
    category: 'Cheio de gás',
    company: 'Ipiranga',
    company_link: 'www.ipiranga.com.br',
    company_img: '',
    company_category: 'Gasolina',
    company_tag: 'ipi ipi ipiranga',
    job_description: 'descript',
  },
  {
    uid: '0cbb94c4-db5c-4dcf-a303-75ccee696ea4',
    job: 'Analista de Desenvolvimento de Produtos Sênior',
    role: 'Tempo Integral',
    location: 'Posto',
    apply_link: 'https://www.linkedin.com/jobs/view/3916621604/',
    category: 'Cheio de gás',
    company: 'Ipiranga',
    company_link: 'www.ipiranga.com.br',
    company_img: '',
    company_category: 'Gasolina',
    company_tag: 'ipi ipi ipiranga',
    job_description: 'descript',
  },
]

import JobCard from './JobCard.astro'

// create an array of unique states and the count of each that appears in the data
// const states = data.reduce((acc, cur) => {
//   const state = cur.state
//   if (acc[state]) {
//     acc[state] += 1
//   } else {
//     acc[state] = 1
//   }
//   return acc
// }, {})

// sort the states by count descending
// const sortedStates = Object.keys(states).sort((a, b) => states[b] - states[a])

// create an object array of states and counts
// const stateCounts = sortedStates.map(state => {
//   return {
//     state,
//     count: states[state],
//   }
// })
---

<div class="mb-12 border-b border-solid border-slate-300 p-6">
  <div class="grid grid-cols-2 gap-4 lg:grid-cols-4">
    <input
      type="text"
      placeholder="Input 1"
      class="rounded-lg border border-gray-300 p-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
    />
    <input
      type="text"
      placeholder="Input 2"
      class="rounded-lg border border-gray-300 p-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
    />
    <div x-data="categorias">
      <div x-combobox x-model="selected">
        <div class="relative">
          <div
            class="relative flex items-center justify-between gap-2 rounded-lg border border-gray-300 bg-white p-2 focus:outline-none focus:ring-2 focus:ring-blue-500">
            <input
              x-combobox:input
              :display-value="framework => framework.name"
              @change="query = $event.target.value;"
              class="w-full border-none p-0 focus:outline-none focus:ring-0"
              placeholder="Categorias"
            />
            <button
              x-combobox:button
              class="absolute inset-y-0 right-0 flex items-center pr-2">
              <!-- Heroicons up/down -->
              <svg
                class="h-5 w-5 shrink-0 text-gray-500"
                viewBox="0 0 20 20"
                fill="none"
                stroke="currentColor"
                ><path
                  d="M7 7l3-3 3 3m0 6l-3 3-3-3"
                  stroke-width="1.5"
                  stroke-linecap="round"
                  stroke-linejoin="round"></path></svg
              >
            </button>
          </div>

          <div
            x-combobox:options
            x-cloak
            class="absolute left-0 z-10 mt-2 max-h-60 w-full max-w-xs origin-top-right overflow-auto rounded-md border border-gray-200 bg-white shadow-md outline-none"
            x-transition.out.opacity>
            <ul class="divide-y divide-gray-100">
              <template
                x-for="framework in filteredFrameworks"
                :key="framework.id"
                hidden>
                <li
                  x-combobox:option
                  :value="framework"
                  :disabled="framework.disabled"
                  :class="{
                                'bg-cyan-500/10 text-gray-900': $comboboxOption.isActive,
                                'text-gray-600': ! $comboboxOption.isActive,
                                'opacity-50 cursor-not-allowed': $comboboxOption.isDisabled,
                            }"
                  class="flex w-full cursor-default items-center justify-between gap-2 px-4 py-2 text-sm">
                  <span x-text="framework.name"></span>

                  <span
                    x-show="$comboboxOption.isSelected"
                    class="font-bold text-cyan-600">&check;</span
                  >
                </li>
              </template>
            </ul>

            <p
              x-show="filteredFrameworks.length == 0"
              class="px-4 py-2 text-sm text-gray-600">
              No frameworks match your query.
            </p>
          </div>
        </div>
      </div>
    </div>

    <button
      class="rounded-lg bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500">
      Search
    </button>
  </div>
</div>

<ul class="space-y-12">
  {data.map(i => <JobCard data={i} />)}
</ul>

<!-- <div class="grid-container">
  {
    stateCounts.map(r => (
      <div class="grid-item">
        {r.state}: {r.count}
      </div>
    ))
  }
</div>

<h3>Coffee Roasters with Location</h3>
<div class="grid-container">
  {
    data.map(r => (
      <div class="grid-item">
        {r.roaster} - {r.location}
      </div>
    ))
  }
</div> -->
